<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

	<title type="text" xml:lang="en"></title>
	<link type="application/atom+xml" href="http://paulstamatiou.com/feed/" rel="self"/>
 	<link type="text" href="http://paulstamatiou.com" rel="alternate"/>
	<updated>2011-08-25T03:50:02+02:00</updated>
	<id>http://jfoucher.com</id>
	<author>
		<name>Jonathan Foucher</name>
	</author>
	<rights>Copyright (c) 2005-2011, Paul Stamatiou; all rights reserved.</rights>

	
	<entry>
		<title>Remote debugging with Xdebug and PhpStorm on Ubuntu</title>
		<link href="http://jfoucher.com/2011/08/18/remote-debugging-with-xdebug-and-phpstorm-on-ubuntu.html"/>
		<updated>2011-08-18T01:09:13+02:00</updated>
		<id>http://jfoucher.com/2011/08/18/remote-debugging-with-xdebug-and-phpstorm-on-ubuntu</id>
		<content type="html">&lt;p&gt;Being able to debug your php application right from your IDE is something that you can't fully realise the power of, unless you've tried it. The advantages are immediately obvious: as soon as the connection from Xdebug is successful, you are blinded by variable inspection, code stepping, breakpoints, etc... Debugging heaven!
It took me... a few months to finally find the time figure out how to set up everything properly, so I hope this post can help someone, somewhere. But don't worry: it retrospect, it's not that difficult at all.&lt;/p&gt;

&lt;h3&gt;First things first : install xdebug&lt;/h3&gt;


&lt;p&gt;On Ubuntu and Debian, it couldn't be easier: just open a terminal and type &lt;code lang=&quot;bash&quot;&gt;sudo apt-get install php-xdebug&lt;/code&gt; This will also install Apache and PHP if you don't have them already.&lt;/p&gt;

&lt;h3&gt;Setup Xdebug on server&lt;/h3&gt;


&lt;p&gt;Done? Right, so this created a config file in /etc/php5/conf.d called xdebug.ini, which is read by php and contains xdebug's configuration options. You'll need to open this file for editing as root, as we need to make a few changes in there. you can copy/paste the command below in the terminal, or do it your own way.
&lt;code lang=&quot;bash&quot;&gt;gksu gedit /etc/apache2/conf.d/xdebug.ini&lt;/code&gt;
Within this file, there will be a single line, referencing the xdebug zend extension, something like this (the path can vary slightly)
&lt;code lang=&quot;ini&quot;&gt;zend_extension=/usr/lib/php5/20090626/xdebug.so&lt;/code&gt;
This is what we're going to add:
&lt;code lang=&quot;ini&quot;&gt;
xdebug.remote_enable=On #this enables remote debugging
xdebug.remote_host=192.168.1.83 #change this IP adress for the one of the computer you are typing on
xdebug.remote_port=9000 #this is the default, leave it as is
&lt;/code&gt;
Now we restart apache so that the new configuration is taken into account:
&lt;code lang=&quot;bash&quot;&gt;sudo /etc/init.d/apache2 restart&lt;/code&gt;
And we that we are &lt;strong&gt;done&lt;/strong&gt; on the server side of things&lt;/p&gt;

&lt;h3&gt;Prepare PhpStorm&lt;/h3&gt;


&lt;p&gt;Switch to the computer where PhpStorm is installed, and open your project. All you have to do is click on the &quot;Accept debug connections&quot; button, and activate Xdebug by using a browser extension.  Here are four extensions to do this:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://addons.mozilla.org/en-US/firefox/addon/58688&quot;&gt;Firefox&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://chrome.google.com/extensions/detail/eadndfjplgieldjbigjakmdgkmoaaaoc&quot;&gt;Chrome&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://benmatselby.posterous.com/xdebug-toggler-for-safari&quot;&gt;Safari&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;https://addons.opera.com/addons/extensions/details/xdebug-launcher/?display=en&quot;&gt;Opera&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Use your preferred extension to activate Xdebug for the page you're on. Go back to PhpStorm, and instruct it to listen to incoming debug connections by clicking on the &quot;Listen PHP debug connections&quot; button &lt;img class=&quot;alignnone&quot; title=&quot;accept connection button&quot; src=&quot;http://i.imgur.com/uMBOg.png&quot; alt=&quot;&quot; width=&quot;28&quot; height=&quot;26&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now all you have to is set a breakpoint and reload your page.&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:319px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Setting a breakpoint in PhpStorm&lt;/div&gt;&lt;img title=&quot;Setting breakpoint&quot; src=&quot;http://i.imgur.com/9AuKc.png&quot; alt=&quot;Setting breakpoint&quot; width=&quot;319&quot; height=&quot;173&quot; /&gt;&lt;/div&gt;


&lt;p&gt;A window will popup asking you if PhpStorm should accept the connection from Xdebug&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:331px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Accepting connection from Xdebug on PhpStorm&lt;/div&gt;&lt;img title=&quot;Accepting connection from Xdebug&quot; src=&quot;http://i.imgur.com/2fZKq.png&quot; alt=&quot;Accepting connection from Xdebug&quot; width=&quot;331&quot; height=&quot;398&quot; /&gt;&lt;/div&gt;


&lt;p&gt;Just click debug and happy bug squishing!&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2011/08/18/remote-debugging-with-xdebug-and-phpstorm-on-ubuntu.html&quot;&gt;Remote debugging with Xdebug and PhpStorm on Ubuntu&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title>A Phing task to update your Twitter status</title>
		<link href="http://jfoucher.com/2011/06/29/phing-task-to-update-twitter-status.html"/>
		<updated>2011-06-29T14:10:00+02:00</updated>
		<id>http://jfoucher.com/2011/06/29/phing-task-to-update-twitter-status</id>
		<content type="html">&lt;h3&gt;Phing and Twitter&lt;/h3&gt;


&lt;p&gt;I recently starting working with &lt;a title=&quot;PHP build and deployment tool&quot; href=&quot;http://www.phing.info&quot;&gt;phing&lt;/a&gt; to automate the build and deployement process for the web apps I'm building. I use it to compile my LESS files to CSS and minimize then, to compress and concatenate the javascript files, to optimize images using &lt;a href=&quot;http://www.smushit.com/&quot;&gt;smushit&lt;/a&gt;, etc...&lt;/p&gt;

&lt;p&gt;I like to be able to comunicate exactly what I'm doing, and thankfully Phing has a built in task to email a message to a list of recipients, which is good, but slightly old school. I wanted something that would be able to integrate readily with twitter, i.e. update my status when a build was completed. I saw &lt;a href=&quot;http://codeinthehole.com/archives/14-Phing-task-to-update-Twitter-status.html&quot;&gt;this post&lt;/a&gt;, which unfortunately uses Basic Auth. As you doubtless know, &lt;a href=&quot;http://dev.twitter.com/pages/basic_auth_shutdown&quot;&gt;Twitter deprecated this form of authentication&lt;/a&gt;, and now asks all users to authenticate using &lt;a href=&quot;http://dev.twitter.com/pages/basic_to_oauth&quot;&gt;OAuth&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Download twitterOAuth library&lt;/h3&gt;


&lt;p&gt;That meant I had to roll my own phing task... However, thanks to great work by cleverer people, doing it was quite simple. Using &lt;a href=&quot;http://abrah.am/&quot;&gt;Abraham Williams'&lt;/a&gt; &lt;a href=&quot;https://github.com/abraham/twitteroauth&quot;&gt;twitteroauth&lt;/a&gt; library means that the coding I'd have to do was greatly reduced. Awesome, because &lt;a href=&quot;http://www.codinghorror.com/blog/2005/08/how-to-be-lazy-dumb-and-successful.html&quot;&gt;I aim to be lazy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The first step is to &lt;a href=&quot;https://github.com/abraham/twitteroauth/tarball/master&quot;&gt;download the twitteroauth library&lt;/a&gt; from github. Extract it to a temporary folder and copy the subfolder &lt;code lang=&quot;bash&quot; inline=&quot;true&quot;&gt;twitteroauth&lt;/code&gt; to the folder where your fing tasks are stored (on my system it is &lt;code lang=&quot;bash&quot; inline=&quot;true&quot;&gt;/usr/share/php/phing/tasks/my/&lt;/code&gt;. Please note you might have to create the &lt;code lang=&quot;bash&quot; inline=&quot;true&quot;&gt;my/&lt;/code&gt; folder within &lt;code lang=&quot;bash&quot; inline=&quot;true&quot;&gt;/usr/share/php/phing/tasks/&lt;/code&gt;. You will need root privileges for these steps.&lt;/p&gt;

&lt;h3&gt;Register application with Twitter&lt;/h3&gt;


&lt;p&gt;Secondly, you need to &lt;a href=&quot;https://dev.twitter.com/apps/new&quot;&gt;register an application with twitter&lt;/a&gt;, as you will need a consumer key and consumer secret later on. Please &lt;a href=&quot;https://dev.twitter.com/apps/new&quot;&gt;do so now&lt;/a&gt;, and come back once you have your app data available.&lt;/p&gt;

&lt;h3&gt;Create the custom phing task&lt;/h3&gt;


&lt;p&gt;Next up is creating the actual task PHP class. Create an empty file named TwitterUpdateTask.php &lt;code lang=&quot;bash&quot;&gt;sudo touch /usr/share/php/phing/tasks/my/TwitterUpdateTask.php&lt;/code&gt; and open it for editing with your favorite editor. We'll use gedit : &lt;code lang=&quot;bash&quot;&gt;gksu gedit /usr/share/php/phing/tasks/my/TwitterUpdateTask.php&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The code for this file is as shown below:&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;php&quot;&gt;
&amp;lt;?php&lt;/p&gt;

&lt;p&gt;require_once (&quot;phing/Task.php&quot;);
require_once (&quot;phing/tasks/my/twitteroauth/twitteroauth.php&quot;);&lt;/p&gt;

&lt;p&gt;/&lt;em&gt; get the lines below from http://twittertokens.6px.eu/ &lt;/em&gt;/&lt;/p&gt;

&lt;p&gt;define('CONSUMER_KEY', 'Your Consumer Key Here');
define('CONSUMER_SECRET', 'Your Consumer Secret Here');
define('OAUTH_TOKEN', 'Your OAuth Token Here');
define('OAUTH_TOKEN_SECRET', 'Your Oauth Token Secret Here');&lt;/p&gt;

&lt;p&gt;class TwitterUpdateTask extends Task {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private $message;

/*
 * The setter for the status message
 */
public function setMessage($str){
    $this-&amp;gt;message=$str;
}


public function main(){
    /* Connect to twitter */
    $connection = new TwitterOAuth(CONSUMER_KEY, CONSUMER_SECRET, OAUTH_TOKEN, OAUTH_TOKEN_SECRET);
    /* Pass the status message as a parameter */
    $parameters = array('status' =&amp;gt; $this-&amp;gt;message);
    /* Post the data to the API endpoint */
    $status = $connection-&amp;gt;post('statuses/update', $parameters);

    if (isset($status-&amp;gt;error)){
        /* if there is an error, fail the build */
        throw new BuildException($status-&amp;gt;error);
    }else{
        /* if there is no error, show a success message */
        $this-&amp;gt;log (&quot;Status posted to twitter&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;Get the OAuth token and secret&lt;/h3&gt;


&lt;p&gt;Don't close this file, we still need to add the authentication data to it. You can already place your consumer key and consumer secret in the apropriate &lt;code lang=&quot;php&quot; inline=&quot;true&quot;&gt;define()&lt;/code&gt; calls (the first two lines), but if not, we'll do it now.&lt;/p&gt;

&lt;p&gt;Navigate to &lt;a href=&quot;http://twittertokens.6px.eu&quot;&gt;http://twittertokens.6px.eu&lt;/a&gt;, put your consumer data and consumer secret in the apropriate fields and click on &quot;Sign in with Twitter&quot;. A twitter page will open asking for your confirmation. Click &quot;Sign in&quot; and you are redirected to http://twittertokens.6px.eu/. You should see 4 lines of code appear, that look like this:&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;php&quot;&gt;
define('CONSUMER_KEY', 'V1UsnZJrgfhgKJFoqsQ');
define('CONSUMER_SECRET', 'UUazcBfXrWW1jcpiSU564hg654t1EMki8gzptQU');
define('OAUTH_TOKEN', '325454656-EuCudghg8tTYwKf9yjt5nhqr14i5egHJPeVRGVxQv');
define('OAUTH_TOKEN_SECRET', 'gh6854hg6tyGEvGEiEi15XmUtOmDpaONM');
&lt;/code&gt;
Copy this code to the corresponding spot in the TwitterUpdateTask.php file, overwriting what's already there.&lt;/p&gt;

&lt;p&gt;Please note though that I'm not making any claims as to how secure this is or whatever. I don't store any of your data anywhere, but if sending your application consumer token and secret worries you, find another way to get the Oauth tokens.&lt;/p&gt;

&lt;h3&gt;Create the build file&lt;/h3&gt;


&lt;p&gt;First, we define the custom task:
&lt;code lang=&quot;xml&quot;&gt;&lt;taskdef name=&quot;twitterupdate&quot; classname=&quot;phing.tasks.my.TwitterUpdateTask&quot; /&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Secondly, let's create a custom target that will send a tweet with the message we want.&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;xml&quot;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;target name=&quot;tweet&quot;&amp;gt;
    &amp;lt;twitterupdate message=&quot;${twitter.status}&quot; /&amp;gt;
&amp;lt;/target&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we can call this task from another one, but we need to make that the twitter.status is set. Let's we have a &quot;staging&quot; target. Part of it could look like this:&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;xml&quot;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Set the timestamp to be used in the twitter update --&amp;gt;
&amp;lt;tstamp&amp;gt;
    &amp;lt;format property=&quot;build.time&quot; pattern=&quot;%Y-%m-%d %H:%I&quot; /&amp;gt;
&amp;lt;/tstamp&amp;gt;
&amp;lt;property name=&quot;twitter.status&quot; value=&quot;Staging build completed at ${build.time}&quot; /&amp;gt;
&amp;lt;phingcall target=&quot;tweet&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This will post the message to twitter, replacing the &lt;code lang=&quot;php&quot; inline=&quot;true&quot;&gt;${build.time}&lt;/code&gt; token by the actual build and time.&lt;/p&gt;

&lt;p&gt;Do you use Phing for your webapp build and deployment? If so, please share any custom tasks you might have created.&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2011/06/29/phing-task-to-update-twitter-status.html&quot;&gt;A Phing task to update your Twitter status&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->CSS minification library for codeigniter<!--:--></title>
		<link href="http://jfoucher.com/2011/04/11/css-minification-library-for-codeigniter.html"/>
		<updated>2011-04-11T14:10:51+02:00</updated>
		<id>http://jfoucher.com/2011/04/11/css-minification-library-for-codeigniter</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;For my latest project, I wanted to be able to easily minify CSS stylesheets, using the simplest syntax possible, ideally using a simple tag in the header, like &lt;code lang=&quot;php&quot;&gt;
&amp;lt;?php echo $this-&gt;css-&gt;link(array('/assets/css/fonts.css','/assets/css/layout.css');?&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;After some searching, I found a css minification library for PHP, &lt;a href=&quot;https://code.google.com/p/minify/&quot;&gt;minify&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It was very easy to modify it so that It could be used in our CodeIgniter applications like any other libraries.
All I did was wrap the main minification function in Codeigniter specific code.
I modelled the interaction on the image library, as I guess that's what most people are used to.&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;css minification library for codeigniter&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2011/04/Screenshot.png&quot;&gt;&lt;img class=&quot;size-medium wp-image-450&quot; title=&quot;css minification for codeigniter&quot; src=&quot;http://cdn.jfoucher.com/uploads/2011/04/Screenshot-300x162.png&quot; alt=&quot;css minification for codeigniter&quot; width=&quot;300&quot; height=&quot;162&quot; /&gt;&lt;/a&gt;&lt;/div&gt;




&lt;h3&gt;How to use&lt;/h3&gt;


&lt;p&gt;Using the library involves loading it, setting up an array with some configuration values, such as the source css file(s), the destination file (optional) or the time that the generated file should be cached, and finally initializing the library with the configuration array() .&lt;/p&gt;

&lt;p&gt;The following code, which should go in your controller, will look very familiar to Codeigniter users.&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;php&quot;&gt;$this-&gt;load-&gt;library('css');
//array of files to concatenate and minify
$config['source_file']=array('/assets/css/layout.css','/assets/css/fonts.css');
//where to output the result
$config['dest_file']'/assets/css/css.min.css';
//Cache time in hours
$config['cache_time']=48;
$this-&gt;css-&gt;initialize($config);
echo $this-&gt;css-&gt;link();
&lt;/code&gt;
Will output the following stylesheet tag:&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;html&quot;&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;/assets/css/css.min.css&quot; type=&quot;text/css&quot; media=&quot;screen&quot; /&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h3&gt;Get It!&lt;/h3&gt;


&lt;p&gt;You can &lt;a href=&quot;https://github.com/jfoucher/codeigniter-css-library&quot;&gt;get it from GitHub&lt;/a&gt;. Don't forget to fork it if you think you can make it better!&lt;/p&gt;

&lt;h3&gt;Finally&lt;/h3&gt;


&lt;p&gt;I'm not sure the way I've done it, using a &lt;code lang=&quot;php&quot; inline=&quot;true&quot;&gt;$config&lt;/code&gt; array and so on, is the best way. It might be a bit overkill for such a simple library. I'd love to hear your thoughts on the subject.&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2011/04/11/css-minification-library-for-codeigniter.html&quot;&gt;<!--:en-->CSS minification library for codeigniter<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->The making of flickholdr.com, an image placeholder generator<!--:--></title>
		<link href="http://jfoucher.com/2011/04/03/the-making-of-flickholdr-an-image-placeholder-generator.html"/>
		<updated>2011-04-03T21:42:49+02:00</updated>
		<id>http://jfoucher.com/2011/04/03/the-making-of-flickholdr-an-image-placeholder-generator</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;There are a few services available to web designer and HTML coders to use dummy images in their html mockups or templates. The one I used to use is &lt;a href=&quot;http://dummyimage.com&quot;&gt;dummyimage&lt;/a&gt; but it is somewhat limited in that the images are completely static: a flat color and some text. I needed the same kind of service, but with actual images or photographs rather than simple placeholders. Something like dynamically generated stock images.&lt;/p&gt;

&lt;h2&gt;The idea&lt;/h2&gt;


&lt;p&gt;And then the idea dawned on me: why not use &lt;a href=&quot;http://flickr.com&quot;&gt;flickr&lt;/a&gt;'s &lt;a href=&quot;http://creativecommons.org/&quot;&gt;creative commons&lt;/a&gt; licensed images? The quality is often very good, especially for &quot;interesting&quot; images, a lot of sizes are available, and users often use tags to classify their images, making it rather easy to get placeholder images about a particular subject.&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:600px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;flickholdr.com&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2011/03/FlickHoldr1.png&quot;&gt;&lt;img class=&quot;size-full wp-image-413&quot; title=&quot;FlickHoldr&quot; src=&quot;http://cdn.jfoucher.com/uploads/2011/03/FlickHoldr1.png&quot; alt=&quot;screenshot of flickholdr.com&quot; width=&quot;600&quot; height=&quot;417&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;h2&gt;The execution&lt;/h2&gt;


&lt;p&gt;So I proceeded to develop a little webapp to do just that, using &lt;a href=&quot;http://codeigniter.com&quot;&gt;codeigniter&lt;/a&gt;, my framework of choice for rapid application development&lt;/p&gt;

&lt;p&gt;I used Codeigniter 2.0 from bitbucket, as I think it is the most up-to-date code available at the moment.&lt;/p&gt;

&lt;p&gt;If the requested image already exists in the cache (i.e. it has already been requested) we simply echo that out, with proper headers, otherwise, we have to generate the image.&lt;/p&gt;

&lt;h2&gt;Getting images from flickr&lt;/h2&gt;


&lt;p&gt;Most of the code deals with pulling images from flickr, and then doing various to them before display. The code that pulls the image from flickr is located in a model called Flickr_model with three methods:&lt;/p&gt;

&lt;ol&gt;
    &lt;li&gt;A public method called &lt;code lang=&quot;php&quot; inline=&quot;true&quot;&gt;search()&lt;/code&gt;  that gets images using the &lt;a href=&quot;http://www.flickr.com/services/api/&quot;&gt;flickr API&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;A private method called &lt;code lang=&quot;php&quot; inline=&quot;true&quot;&gt;_get_sizes()&lt;/code&gt; that finds the sizes available for that particular image&lt;/li&gt;
    &lt;li&gt;Another private method &lt;code lang=&quot;php&quot; inline=&quot;true&quot;&gt;_get_author()&lt;/code&gt; that gets the information for the image and returns the name of the author, to be displayed in the watermark&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The &lt;code lang=&quot;php&quot; inline=&quot;true&quot;&gt;search()&lt;/code&gt; method returns as soon as it finds an image of at least the required size.&lt;/p&gt;

&lt;p&gt;The controller private method &lt;code lang=&quot;php&quot; inline=&quot;true&quot;&gt;_get_image()&lt;/code&gt; then takes charge of resizing, cropping and watermarking the image, using codeigniter's &lt;a title=&quot;Codeigniter image manipulation class manual&quot; href=&quot;http://codeigniter.com/user_guide/libraries/image_lib.html&quot;&gt;image manipulation library&lt;/a&gt; to keep things quick and simple. I just tweaked the watermarking method of that class to allow for semi-transparent watermarks.&lt;/p&gt;

&lt;p&gt;The controller then sends the image to the browser with the proper headers.&lt;/p&gt;

&lt;h3&gt;End of the story!&lt;/h3&gt;


&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: Flickholdr is now open sourced and the code is available on &lt;a href=&quot;https://github.com/jfoucher/flickholdr&quot;&gt;github&lt;/a&gt;&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2011/04/03/the-making-of-flickholdr-an-image-placeholder-generator.html&quot;&gt;<!--:en-->The making of flickholdr.com, an image placeholder generator<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->Installing and running APC cache with CodeIgniter<!--:--></title>
		<link href="http://jfoucher.com/2011/02/13/installing-running-apc-cache-codeigniter.html"/>
		<updated>2011-02-13T23:33:33+01:00</updated>
		<id>http://jfoucher.com/2011/02/13/installing-running-apc-cache-codeigniter</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;&lt;span style=&quot;color: #000000; line-height: 27px;&quot;&gt;APC cache&lt;/span&gt; Codeigniter 2 now includes an excellent cache driver, which makes it dead easy to use any one of the great available cache librairies such as &lt;a href=&quot;http://php.net/apc&quot;&gt;APC&lt;/a&gt; o &lt;a href=&quot;http://www.memcached.org/&quot;&gt;memcached&lt;/a&gt;. In this post I will focus on APC, it's installation on an &lt;a href=&quot;/?p=193&quot;&gt;Ubuntu 10.04 server&lt;/a&gt;, and a few benchmarks to compare the various cache systems.  For my testing, I will use an Ubuntu Server installation, on a VirtualBox virtual machine with 256 Mb of RAM and a single processor. This enables me to test things until everything breaks, than just scrap that VM and start with a clean one. However, a description of this setup is a story for another day...&lt;/p&gt;

&lt;h3&gt;Installation&lt;/h3&gt;


&lt;p&gt;On Ubuntu, and on other debian based linuxes, you can install APC by typing &lt;code lang=&quot;bash&quot;&gt;sudo apt-get install php-apc&lt;/code&gt; on the command line. Of course, you will have to install Apache and php before that, but that is really easy: &lt;code lang=&quot;bash&quot;&gt;sudo apt-get install php5&lt;/code&gt; will install &lt;a href=&quot;http://php.net&quot;&gt;PHP&lt;/a&gt; and all needed dependencies, including &lt;a href=&quot;http://apache.org&quot;&gt;apache&lt;/a&gt; So now that APC is installed, just restart apache &lt;code lang=&quot;bash&quot;&gt;sudo /etc/init.d/apache2 restart&lt;/code&gt; and you're ready to go.  In codeigniter, you don't need to do anything special. Just turn the cache on by putting the following line somewhere in your controller:  &lt;code lang=&quot;php&quot;&gt;$this-&amp;gt;output-&amp;gt;cache(n);&lt;/code&gt; Where 'n' is the number of minutes to cache that particular content.  The cache library is clever enough to pick the best cache driver from the four available ones (memcached, APC, file and dummy). Forget about the dummy driver: it doesn't do anything&lt;/p&gt;

&lt;h3&gt;Benchmarks&lt;/h3&gt;


&lt;p&gt;These are the results for 50 concurrent connections : For APC we get about 43 requests/s, with the file caching mecanism around 25, requests/s, and with no cache at all we are below 18 requests/s&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2011/02/chart22.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-387&quot; title=&quot;Codeigniter APC cache benchmark&quot; src=&quot;http://cdn.jfoucher.com/uploads/2011/02/chart22.png&quot; alt=&quot;APC: 43, File: 25, None: 18 &quot; width=&quot;560&quot; height=&quot;260&quot; /&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p style=&quot;text-align: left;&quot;&gt;For low concurency (2) the improvement when using APC is similar: in this case the number of requests per second nearly doubled, from 19 to 47 between the case without any caching system and the APC case&lt;/p&gt;


&lt;p style=&quot;text-align: left;&quot;&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2011/02/chart2.png&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-383&quot; title=&quot;Codeigniter cache benchmark: low concurency&quot; src=&quot;http://cdn.jfoucher.com/uploads/2011/02/chart2.png&quot; alt=&quot;APC: 46.37 rps, File: 27.23 rps, None: 18.99 rps&quot; width=&quot;560&quot; height=&quot;260&quot; /&gt;&lt;/a&gt;&lt;/p&gt;


&lt;p style=&quot;text-align: left;&quot;&gt;So just turning the default codeigniter cache on gives us a significant speed improvement, going all the way and installing APC can nearly double the speed of your application. Not too shabby I should think.&lt;/p&gt;


&lt;p style=&quot;text-align: left;&quot;&gt;It is &lt;strong&gt;so&lt;/strong&gt; easy to take advantage of this caching mechasism on Codeigniter 2 that it would really be a pity not to do so!&lt;/p&gt;


&lt;p style=&quot;text-align: left;&quot;&gt;The only caching library missing here is memcached. Have you tried any of these caching libraries with codeigniter 2?&lt;/p&gt;


&lt;p style=&quot;text-align: left;&quot;&gt;&lt;/p&gt;


&lt;!--:--&gt;


&lt;!--:fr--&gt;


&lt;p&gt;
&lt;/p&gt;


&lt;p&gt;&lt;/p&gt;


&lt;!--:--&gt;

&lt;a href=&quot;http://jfoucher.com/2011/02/13/installing-running-apc-cache-codeigniter.html&quot;&gt;<!--:en-->Installing and running APC cache with CodeIgniter<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title>Wordpress 404 notification by email</title>
		<link href="http://jfoucher.com/2011/01/22/wordpress-email-404-notification.html"/>
		<updated>2011-01-22T23:42:45+01:00</updated>
		<id>http://jfoucher.com/2011/01/22/wordpress-email-404-notification</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;I couldn't find something that did just what I wanted and no more: send me an email when someone gets a 404 error on my blog. It seems pretty simple, and it really is. More than that actually. It's problably the simplest plugin I've ever written.&lt;/p&gt;

&lt;p&gt;Check it out:
&lt;code lang=&quot;php&quot;&gt;
function email_error(){&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;global $wp_query;
$location=$_SERVER['REQUEST_URI'];
if ($wp_query-&amp;amp;gt;is_404){
    email_admin($location);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
add_action('get_header', 'email_error');
&lt;/code&gt;
This is the main part of the code, the one gets executed everytime the &lt;code lang=&quot;php&quot; inline=&quot;true&quot;&gt;get_header&lt;/code&gt; hook is called. It basically just checks the $wp_query object to see if the current url gives a 404 error and then passes that url to the email_admin function&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;php&quot;&gt;
function email_admin($location){&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$name=get_option('blogname');
$email = get_option('admin_email');
$headers  = &quot;MIME-Version: 1.0\r\n&quot;;
$headers .= &quot;Content-type: text/plain; charset=UTF-8\r\n&quot;;
$headers .= 'From: &quot;' . $name . '&quot; &amp;amp;lt;' .$email. &quot;&amp;amp;gt;\r\n&quot;;
$subject='404 error in '.$name;
$body='A 404 error occured at the following url: '.$_SERVER['SERVER_NAME'].$location;
@mail($email,$subject,$body,$headers);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This function sets some headers for the email, such as the sender's name and email, and the subject of the message, and then sends the message. No error is shown if the message can't be sent, as this would be displayed on the page.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: Finally available on the &lt;a href=&quot;http://wordpress.org/extend/plugins/email-404/&quot;&gt;wordpress plugin repository&lt;/a&gt;&lt;!--:--&gt;&lt;!--:fr--&gt;&lt;p&gt;&lt;/p&gt;

&lt;p&gt;I couldn't find something that did just what I wanted and no more: send me an email when someone gets a 404 error on my blog. It seems pretty simple, and it really is. More than that actually. It's problably the simplest plugin I've ever written.&lt;/p&gt;


&lt;p&gt;Check it out:&lt;br /&gt;
&lt;code lang=&quot;php&quot;&gt;&lt;br /&gt;
function email_error(){&lt;br /&gt;
    global $wp_query;&lt;br /&gt;
    $location=$_SERVER['REQUEST_URI'];&lt;/p&gt;


&lt;p&gt; if ($wp_query-&gt;is_404){&lt;br /&gt;
        email_admin($location);&lt;br /&gt;
    }&lt;br /&gt;
}&lt;br /&gt;
add_action('get_header', 'email_error');&lt;br /&gt;
&lt;/code&gt;&lt;br /&gt;
This is the main part of the code, the one gets executed everytime the &lt;code lang=&quot;php&quot; inline=&quot;true&quot;&gt;get_header&lt;/code&gt; hook is called. It basically just checks the $wp_query object to see if the current url gives a 404 error and then passes that url to the email_admin function&lt;/p&gt;


&lt;p&gt;&lt;code lang=&quot;php&quot;&gt;&lt;br /&gt;
function email_admin($location){&lt;br /&gt;
    $name=get_option('blogname');&lt;br /&gt;
    $email = get_option('admin_email');&lt;br /&gt;
    $headers  = &quot;MIME-Version: 1.0\r\n&quot;;&lt;br /&gt;
    $headers .= &quot;Content-type: text/plain; charset=UTF-8\r\n&quot;;&lt;br /&gt;
    $headers .= 'From: &quot;' . $name . '&quot; &lt;' .$email. &quot;&gt;\r\n&quot;;&lt;br /&gt;
    $subject='404 error in '.$name;&lt;br /&gt;
    $body='A 404 error occured at the following url: '.$_SERVER['SERVER_NAME'].$location;&lt;br /&gt;
    @mail($email,$subject,$body,$headers);&lt;br /&gt;
}&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This function sets some headers for the email, such as the sender's name and email, and the subject of the message, and then sends the message. No error is shown if the message can't be sent, as this would be displayed on the page.&lt;/p&gt;
&lt;p&gt;Until approval by the wordpress.org guys, you can download it here: &lt;a href='http://cdn.jfoucher.com/uploads/2011/01/email-404.zip'&gt;Email 404 Wordpress plugin&lt;/a&gt;&lt;/p&gt;
&lt;/p&gt;


&lt;p&gt;&lt;/p&gt;


&lt;!--:--&gt;

&lt;a href=&quot;http://jfoucher.com/2011/01/22/wordpress-email-404-notification.html&quot;&gt;Wordpress 404 notification by email&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->Spanish characters on Qwerty keyboard for Ubuntu 10.10<!--:--></title>
		<link href="http://jfoucher.com/2011/01/14/spanish-characters-on-qwerty-keyboard-for-ubuntu-10-10.html"/>
		<updated>2011-01-14T22:06:17+01:00</updated>
		<id>http://jfoucher.com/2011/01/14/spanish-characters-on-qwerty-keyboard-for-ubuntu-10-10</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;Typing spanish characters on a standard QWERTY (or other) keyboard is near impossible. I have used the Character Palette panel applet to do so, but this method requires clicking on the letter you want, and then paste it where you want it. To much work for my tastes. Yes I'm lazy. I'm a programmer.&lt;/p&gt;

&lt;p&gt;So, an easier is using the compose key. This allows me to type that key and a single apostrophe followed by the letter e for example, and get a é. I mapped the compose key to the left Win key, so the sequience is &lt;code inline=&quot;true&quot;&gt;LWin - ' &gt; e&lt;/code&gt; which writes é&lt;/p&gt;

&lt;p&gt;To choose the compose key, open &lt;code inline=&quot;true&quot;&gt;Preferences &gt; Keyboard&lt;/code&gt;,  &lt;code inline=&quot;true&quot;&gt;Layouts&lt;/code&gt; tab and click on &lt;code inline=&quot;true&quot;&gt;Options&lt;/code&gt;. Open the &lt;code inline=&quot;true&quot;&gt;Compose key position&lt;/code&gt; submenu, and choose whichever one you like best. I think the Win key is a good choice as it's not used for anything much... Except remind us of our freedom...
&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2011/01/Screenshot-Keyboard-Layout-Options-1.png&quot;&gt;&lt;img src=&quot;http://cdn.jfoucher.com/uploads/2011/01/Screenshot-Keyboard-Layout-Options-1-300x218.png&quot; alt=&quot;Keyboard Layout Options&quot; title=&quot;Keyboard Layout Options&quot; width=&quot;300&quot; height=&quot;218&quot; class=&quot;aligncenter size-medium wp-image-264&quot; /&gt;&lt;/a&gt;
And yay! Writing Spanish is cool again!&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2011/01/14/spanish-characters-on-qwerty-keyboard-for-ubuntu-10-10.html&quot;&gt;<!--:en-->Spanish characters on Qwerty keyboard for Ubuntu 10.10<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->Python skype notifier for Ubuntu<!--:--></title>
		<link href="http://jfoucher.com/2011/01/14/python-skype-notifier-for-ubuntu.html"/>
		<updated>2011-01-14T13:21:52+01:00</updated>
		<id>http://jfoucher.com/2011/01/14/python-skype-notifier-for-ubuntu</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;What's the best way to learn a new programming language ? Well, according to &lt;a href=&quot;http://programmers.stackexchange.com/q/3519/3984&quot;&gt;this question&lt;/a&gt; the best (only ?) way to learn a new language is just to code in that language.&lt;/p&gt;

&lt;h3&gt;Why Python ?&lt;/h3&gt;


&lt;p&gt;Because it's &lt;a href=&quot;http://en.wikipedia.org/wiki/Python_(programming_language)#Name_and_neologisms&quot;&gt;named after the Monty Python&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;No, seriously, that's why :&lt;a href=&quot;http://xkcd.com/353/&quot;&gt;&lt;img class=&quot;aligncenter size-medium wp-image-201&quot; title=&quot;python&quot; src=&quot;http://cdn.jfoucher.com/uploads/2011/01/python-264x300.png&quot; alt=&quot;I wrote 20 short programs in Python yesterday.  It was wonderful.  Perl, I'm leaving you.&quot; width=&quot;264&quot; height=&quot;300&quot; /&gt;&lt;/a&gt;No, not this &quot;that's why&quot;! &lt;a href=&quot;http://programmers.stackexchange.com/questions/10675/ideal-programming-language-learning-sequence#answer-10748&quot;&gt;That one&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you are just starting out as a programmer, I cannot recommend &lt;a href=&quot;http://learnpythonthehardway.org/&quot;&gt;Learn Python The Hard Way&lt;/a&gt; highly enough. It is an excellent introduction to the ideas and skills you will need as a programmer, starting from the very basics, like you've never seen a for loop in your life. Actually the first 10 or so lessons do not include ANY control structures!&lt;/p&gt;

&lt;p&gt;If on the other hand you  already have some coding experience, I recomend &lt;a href=&quot;http://diveintopython.org/&quot;&gt;Dive Into Python&lt;/a&gt;.  Although it's no quite as hands on as Learn Python the Hard Way, it's a very good book, only covering the basics insofar as they are specific to python.&lt;/p&gt;

&lt;h3&gt;Why for &lt;a href=&quot;/2011/01/193-compile-custom-kernel-on-ubuntu-10-10.html&quot;&gt;Ubuntu&lt;/a&gt;?&lt;/h3&gt;


&lt;p&gt;That's what I use. Simple as that. Also python and pygtk are included by default, making distribution much easier.&lt;/p&gt;

&lt;h3&gt;Why Skype?&lt;/h3&gt;


&lt;p&gt;Haven't found out yet. I started developping a backup application in pygtk and glade, a front end to rsync, but got sidetracked reading about the chnges to Ubuntu's &lt;a href=&quot;https://wiki.ubuntu.com/DesktopExperienceTeam/ApplicationIndicators&quot;&gt;application notifier&lt;/a&gt;, ended up interested in the &lt;a href=&quot;https://wiki.ubuntu.com/MessagingMenu&quot;&gt;messaging notifier&lt;/a&gt;, and decided to do something with that.&lt;/p&gt;

&lt;p&gt;Skype seemed like the obvious target, given that's it's the only communication application I use that lacks a messaging menu indicator. It does have a systray icon though, so my app is probably superfluous...&lt;/p&gt;

&lt;h3&gt;Anyway, to the coding!&lt;/h3&gt;


&lt;p&gt;&lt;code lang=&quot;python&quot;&gt;&lt;/p&gt;

&lt;h1&gt;!/usr/bin/env python&lt;/h1&gt;

&lt;p&gt;import indicate
import gobject
import pynotify
import gtk
import hashlib
import Skype4Py
import urllib
import os
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The first line tell the host system to use python to interpret that file&lt;/p&gt;

&lt;p&gt;The next lines import the required python modules.&lt;/p&gt;

&lt;p&gt;Next, we have to define the main class and declare some variables:
&lt;code lang=&quot;python&quot;&gt;
class skypeIndicator:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;notifShown={}
oldcount={}
count={}
indicator={}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;
This is the clas initialization function
&lt;code lang=&quot;python&quot;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def __init__(self):
    self.skype= Skype4Py.Skype()
    self.loadSkype()
    #create notification icon
    self.server = indicate.indicate_server_ref_default()
    self.server.set_type(&quot;message.im&quot;)
    self.server.set_desktop_file(&quot;/usr/share/applications/skype.desktop&quot;)
    self.server.connect(&quot;server-display&quot;, self.server_display)
    self.server.show()
    self.create_indicators()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;
The first line creates the skype API instance, after which we call the loadSkype() function, which checks if skype is loaded and if not, starts it. We'll look at that function later on.
Next, we create the notification server instance, choose an icon, connect the function server_display to the server-display event (when the icon is clicked on) and finally run the create_indicators function that looks for skype messages and displays them accordingly.&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;python&quot;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def loadSkype(self):
    try:
        if not self.skype.Client.IsRunning:
            self.skype.Client.Start()
    except:
        #
        print &quot;Please open skype first&quot;
        self.noSkype()
    try:
        self.skype.Attach()
    except Skype4Py.errors.ISkypeAPIError:
        print &quot;Please open skype first&quot;
        self.noSkype()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This basically tries to start skype if it is not already started and calls noSkype() if it couldn't start it. noSype() shows a notification message to let the user know that they have to start Skype.
&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2011/01/skype-not-started.png&quot;&gt;&lt;img src=&quot;http://cdn.jfoucher.com/uploads/2011/01/skype-not-started.png&quot; alt=&quot;Error shown if Skype is not running&quot; title=&quot;skype-not-started&quot; width=&quot;428&quot; height=&quot;213&quot; class=&quot;aligncenter size-full wp-image-256&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This next function is where the meat of the process takes place. Please read the inline comments to understand how it works, and ask for clarification by &lt;a href=&quot;#respond&quot;&gt;posting a comment&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;python&quot;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def create_indicators(self):

    &quot;&quot;&quot;Loads skype messages, displays them as notification bubbles and also shows them in the messaging menu&quot;&quot;&quot;

    #initialize count dictionaries
    self.count={}
    #get unread messages from skype, set self.unread variable
    self.get_messages()

    #self.unread is a dictionary having the username of the sender as key and a list of messages as value
    for name in self.unread:

        # Here we look at the first message from this user to set the messaging menu indicator
        # we only want one indicator per user
        msg=self.unread[name][0]

        #initialize message count for this user
        if name not in self.count:
            self.count[name]=0
        if name not in self.oldcount:
            self.oldcount[name]=0

        # if this user doesn't have his indicator yet
        if name not in self.indicator:
            # create indicator
            self.indicator[name] = indicate.Indicator()
            print &quot;creating indicator&quot;

            # Set indicator properties
            self.fullname=self.name_from_handle(name)
            self.indicator[name].set_property(&quot;subtype&quot;, &quot;im&quot;)
            self.indicator[name].set_property(&quot;sender&quot;, self.fullname )
            self.indicator[name].set_property(&quot;handle&quot;, name)

            #this gets the most user-friendly name available for this user
            user=self.user_from_handle(name)

            # get an avatar for this user
            try:
                # This will only work on windows
                self.file=name + '.jpg'
                user.SaveAvatarToFile(file)
            except Skype4Py.errors.ISkypeError:
                # So on linux we use a generated monster ID. Fun but useless!
                h=hashlib.md5(name).hexdigest()
                #TODO find a way to get skype avatars on linux
                urllib.urlretrieve('http://friedcellcollective.net/monsterid/monster/%s/64' % h,name + '.jpg')
                self.file=name + '.jpg'

            #convert the imge to a pixbuf
            pixbuf=gtk.gdk.pixbuf_new_from_file(self.file)
            # for use in the indicator
            self.indicator[name].set_property_icon(&quot;icon&quot;, pixbuf)

            # set the timestamp of the indicator (this is what makes the indicator display the time since the message was received
            self.indicator[name].set_property_time(&quot;time&quot;, msg.Timestamp)

            self.indicator[name].show()
            # when the user clicks on the indicator message, open the skype messaging window for this user
            self.indicator[name].connect(&quot;user-display&quot;, self.display_msg)

        msgbody = ''
        #reverse list so latest message is at the bottom
        for eachmsg in self.unread[name][::-1]:
            # msgbody contains all the messages from that user so far
            msgbody += eachmsg.Body + &quot;\n&quot;

        # We set this person's indicator body to the compound text
        self.indicator[name].set_property(&quot;body&quot;, msgbody)

        # if there are more than one message from this user, we set the indicator count to be displayed in the messaging menu.
        # Otherwise the time elapsed since receiving the message will be shown
        if self.count[name] &amp;gt; 1:
            self.indicator[name].set_property(&quot;count&quot;, str(self.count[name]))

        # If a new message arrived since last time checked, mark notification as not shown
        if self.count[name] &amp;gt; self.oldcount[name]:
            self.notifShown[name]=False

        #If notification marked as not shown, show it
        if not self.notifShown.get(name, False) and self.showNotification(self.fullname, msgbody, self.file):
            #mark notification as shown
            self.notifShown[name]=True

            self.indicator[name].set_property(&quot;draw-attention&quot;, &quot;true&quot;)
            self.indicator[name].show()
            print &quot;notification shown for&quot;, name

        print &quot;%d messages from %s&quot; %(self.count[name],name)
    # Set oldcountt variable for next loop
    self.oldcount=self.count
    # Loop runs as long as true is returned
    return True
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;When a new messages arrives, this is what the messaging menu looks like
&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2011/01/skype-indicator-menu.png&quot;&gt;&lt;img src=&quot;http://cdn.jfoucher.com/uploads/2011/01/skype-indicator-menu.png&quot; alt=&quot;Messaging menu open qith unread messages&quot; title=&quot;skype-indicator-menu&quot; width=&quot;376&quot; height=&quot;256&quot; class=&quot;aligncenter size-full wp-image-258&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The function that gets unread skype messages is as follows For each message, we add it to a list containg the messages from a particular user in the self.unread dictionary.&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;python&quot;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def get_messages(self):
    print &quot;checking messages&quot;
    self.unread={}

    for msg in self.skype.MissedMessages:
        display_name = msg.FromHandle
        if display_name not in self.count:
            self.count[display_name]=0
        if not display_name in self.unread:
            self.unread[display_name]=[]

        self.unread[display_name].append(msg)
        self.count[display_name]+=1
    return self.unread
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The next two functions are in charge of getting the skype user username as well as the friendliest name available.&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;python&quot;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def name_from_handle(self,handle):
    user=self.skype.User(handle)
    if user.FullName:
        return user.FullName
    elif user.DisplayName:
        return user.DisplayName
    else:
        return handle

def user_from_handle(self,handle):
    return self.skype.User(handle)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Below is the generic function in charge of showing popup notifications.&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;python&quot;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def showNotification(self, title, message,file=None):
    '''takes a title and a message to display the email notification. Returns the
    created notification object'''

    n = pynotify.Notification(title, message, &quot;notification-message-im&quot;)
    if file is not None:
        n.set_property(&quot;icon-name&quot;,os.getcwd() + &quot;/&quot; + file)
    n.show()

    return n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is what it looks like with three new messages
&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2011/01/skype-indicator.png&quot;&gt;&lt;img src=&quot;http://cdn.jfoucher.com/uploads/2011/01/skype-indicator.png&quot; alt=&quot;The Ubuntu skype indicator with three new messages&quot; title=&quot;skype-indicator&quot; width=&quot;428&quot; height=&quot;232&quot; class=&quot;aligncenter size-full wp-image-253&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next one shows the popup notification that skype is not loaded :
&lt;code lang=&quot;python&quot;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def noSkype(self):
    '''Shows a notification if skype is not started'''
    title='Start Skype'
    message='Please start skype otherwise this won\'t work'
    n = self.showNotification(title, message)
    n.set_property(&quot;icon-name&quot;,gtk.STOCK_DIALOG_WARNING)
    n.show()

    return n
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And finally, the indicator events callbacks (what happens when we click on the skype indicator, or on a particular message&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;python&quot;&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;def display_msg(self, indicator, timestamp):
    #hide this indicator
    indicator.hide()
    #messaging menu goes back to normal
    indicator.set_property(&quot;draw-attention&quot;, &quot;false&quot;)
    # open the skype chat window for this user
    self.skype.Client.OpenMessageDialog(indicator.get_property(&quot;handle&quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;At the end of the file, we start everything :&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;python&quot;&gt;
if &lt;strong&gt;name&lt;/strong&gt; == &quot;&lt;strong&gt;main&lt;/strong&gt;&quot;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;skypeind=skypeIndicator()
# Loop
gobject.timeout_add_seconds(5, skypeind.create_indicators)
gtk.main()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And finally, here is the complete source code :&lt;/p&gt;

&lt;p&gt;&lt;code lang=&quot;python&quot;&gt;&lt;/p&gt;

&lt;h1&gt;!/usr/bin/env python&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1&gt;Copyright 2010 Jonathan Foucher&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1&gt;Authors:&lt;/h1&gt;

&lt;h1&gt;Jonathan Foucher &lt;a href=&quot;&amp;#109;&amp;#x61;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#106;&amp;#102;&amp;#x6f;&amp;#117;&amp;#x63;&amp;#x68;&amp;#101;&amp;#x72;&amp;#64;&amp;#x36;&amp;#112;&amp;#x78;&amp;#x2e;&amp;#101;&amp;#x75;&quot;&gt;&amp;#106;&amp;#x66;&amp;#x6f;&amp;#x75;&amp;#x63;&amp;#104;&amp;#101;&amp;#114;&amp;#x40;&amp;#x36;&amp;#x70;&amp;#x78;&amp;#x2e;&amp;#x65;&amp;#x75;&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1&gt;This program is free software: you can redistribute it and/or modify it&lt;/h1&gt;

&lt;h1&gt;under the terms of either or both of the following licenses:&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1&gt;1) the GNU Lesser General Public License version 3, as published by the&lt;/h1&gt;

&lt;h1&gt;Free Software Foundation; and/or&lt;/h1&gt;

&lt;h1&gt;2) the GNU Lesser General Public License version 2.1, as published by&lt;/h1&gt;

&lt;h1&gt;the Free Software Foundation.&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1&gt;This program is distributed in the hope that it will be useful, but&lt;/h1&gt;

&lt;h1&gt;WITHOUT ANY WARRANTY; without even the implied warranties of&lt;/h1&gt;

&lt;h1&gt;MERCHANTABILITY, SATISFACTORY QUALITY or FITNESS FOR A PARTICULAR&lt;/h1&gt;

&lt;h1&gt;PURPOSE.  See the applicable version of the GNU Lesser General Public&lt;/h1&gt;

&lt;h1&gt;License for more details.&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1&gt;You should have received a copy of both the GNU Lesser General Public&lt;/h1&gt;

&lt;h1&gt;License version 3 and version 2.1 along with this program.  If not, see&lt;/h1&gt;

&lt;h1&gt;&lt;a href=&quot;http://www.gnu.org/licenses/&quot;&gt;http://www.gnu.org/licenses/&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;p&gt;import indicate
import gobject
import pynotify
import gtk
import hashlib
import Skype4Py
import urllib
import os&lt;/p&gt;

&lt;p&gt;class skypeIndicator:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;notifShown={}
oldcount={}
count={}
indicator={}

def __init__(self):
    #self.no_skype()
    #get skype control
    self.skype= Skype4Py.Skype()

    self.loadSkype()

    #create notification icon

    self.server = indicate.indicate_server_ref_default()
    self.server.set_type(&quot;message.im&quot;)
    self.server.set_desktop_file(&quot;/usr/share/applications/skype.desktop&quot;)
    self.server.connect(&quot;server-display&quot;, self.server_display)
    #self.server.set_status (indicate.STATUS_ACTIVE)
    self.server.show()
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;for slot in dir(self.server):&lt;/h1&gt;

&lt;h1&gt;attr = getattr(self.server, slot)&lt;/h1&gt;

&lt;h1&gt;print attr&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;    #self.unread={}
    #self.indicator.set_property('draw-attention', 'true');
    self.create_indicators()
    #pass
    #indicator.connect(&quot;user-display&quot;, self.display_msg)
def loadSkype(self):
    try:
        if not self.skype.Client.IsRunning:
            self.skype.Client.Start()
    except:
        #
        print &quot;Please open skype first&quot;
        self.noSkype()



    try:
        self.skype.Attach()
    except Skype4Py.errors.ISkypeAPIError:
        print &quot;Please open skype first&quot;
        self.noSkype()
        #pass

def create_indicators(self):

    &quot;&quot;&quot;Loads skype messages, displays them as notification bubbles and also shows them in the messaging menu&quot;&quot;&quot;

    #initialize count dictionaries
    self.count={}
    #get unread messages from skype, set self.unread variable
    self.get_messages()

    #self.unread is a dictionary having the username of the sender as key and a list of messages as value
    for name in self.unread:

        # Here we look at the first message from this user to set the messaging menu indicator
        # we only want one indicator per user
        msg=self.unread[name][0]

        #initialize message count for this user
        if name not in self.count:
            self.count[name]=0
        if name not in self.oldcount:
            self.oldcount[name]=0

        # if this user doesn't have his indicator yet
        if name not in self.indicator:
            # create indicator
            self.indicator[name] = indicate.Indicator()
            print &quot;creating indicator&quot;

            # Set indicator properties
            self.fullname=self.name_from_handle(name)
            self.indicator[name].set_property(&quot;subtype&quot;, &quot;im&quot;)
            self.indicator[name].set_property(&quot;sender&quot;, self.fullname )
            self.indicator[name].set_property(&quot;handle&quot;, name)

            #this gets the most user-friendly name available for this user
            user=self.user_from_handle(name)

            # get an avatar for this user
            try:
                # This will only work on windows
                self.file=name + '.jpg'
                user.SaveAvatarToFile(file)
            except Skype4Py.errors.ISkypeError:
                # So on linux we use a generated monster ID. Fun but useless!
                h=hashlib.md5(name).hexdigest()
                #TODO find a way to get skype avatars on linux
                urllib.urlretrieve('http://friedcellcollective.net/monsterid/monster/%s/64' % h,name + '.jpg')
                self.file=name + '.jpg'

            #convert the imge to a pixbuf
            pixbuf=gtk.gdk.pixbuf_new_from_file(self.file)
            # for use in the indicator
            self.indicator[name].set_property_icon(&quot;icon&quot;, pixbuf)

            # set the timestamp of the indicator (this is what makes the indicator display the time since the message was received
            self.indicator[name].set_property_time(&quot;time&quot;, msg.Timestamp)

            self.indicator[name].show()
            # when the user clicks on the indicator message, open the skype messaging window for this user
            self.indicator[name].connect(&quot;user-display&quot;, self.display_msg)

        msgbody = ''
        #reverse list so latest message is at the bottom
        for eachmsg in self.unread[name][::-1]:
            # msgbody contains all the messages from that user so far
            msgbody += eachmsg.Body + &quot;\n&quot;

        # We set this person's indicator body to the compound text
        self.indicator[name].set_property(&quot;body&quot;, msgbody)

        # if there are more than one message from this user, we set the indicator count to be displayed in the messaging menu.
        # Otherwise the time elapsed since receiving the message will be shown
        if self.count[name] &amp;gt; 1:
            self.indicator[name].set_property(&quot;count&quot;, str(self.count[name]))

        # If a new message arrived since last time checked, mark notification as not shown
        if self.count[name] &amp;gt; self.oldcount[name]:
            self.notifShown[name]=False

        #If notification marked as not shown, show it
        if not self.notifShown.get(name, False) and self.showNotification(self.fullname, msgbody, self.file):
            #mark notification as shown
            self.notifShown[name]=True

            self.indicator[name].set_property(&quot;draw-attention&quot;, &quot;true&quot;)
            self.indicator[name].show()
            print &quot;notification shown for&quot;, name

        print &quot;%d messages from %s&quot; %(self.count[name],name)
    # Set oldcountt variable for next loop
    self.oldcount=self.count
    # Loop runs as long as true is returned
    return True


def name_from_handle(self,handle):
    user=self.skype.User(handle)
    if user.FullName:
        return user.FullName
    elif user.DisplayName:
        return user.DisplayName
    else:
        return handle

def user_from_handle(self,handle):
    return self.skype.User(handle)

def showNotification(self, title, message,file=None):
    '''takes a title and a message to display the email notification. Returns the
    created notification object'''

    n = pynotify.Notification(title, message, &quot;notification-message-im&quot;)
    if file is not None:
        n.set_property(&quot;icon-name&quot;,os.getcwd() + &quot;/&quot; + file)
    n.show()

    return n

def noSkype(self):
    '''Shows a notification if skype is not started'''
    title='Start Skype'
    message='Please start skype otherwise this won\'t work'
    n = self.showNotification(title, message)
    n.set_property(&quot;icon-name&quot;,gtk.STOCK_DIALOG_WARNING)
    n.show()

    return n

def get_messages(self):
    print &quot;checking messages&quot;
    self.unread={}

    for msg in self.skype.MissedMessages:
        display_name = msg.FromHandle
        if display_name not in self.count:
            self.count[display_name]=0
        if not display_name in self.unread:
            self.unread[display_name]=[]

        self.unread[display_name].append(msg)
        self.count[display_name]+=1
    return self.unread



def server_display(self, widget, timestamp=None):
    #Show main Skype window
    self.skype.Client.Focus()

def display_msg(self, indicator, timestamp):
    #hide this indicator
    indicator.hide()
    #messaging menu goes back to normal
    indicator.set_property(&quot;draw-attention&quot;, &quot;false&quot;)
    # open the skype chat window for this user
    self.skype.Client.OpenMessageDialog(indicator.get_property(&quot;handle&quot;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if &lt;strong&gt;name&lt;/strong&gt; == &quot;&lt;strong&gt;main&lt;/strong&gt;&quot;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;skypeind=skypeIndicator()

# Loop
gobject.timeout_add_seconds(5, skypeind.create_indicators)
gtk.main()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Download the script, or fork it on the &lt;a href=&quot;https://github.com/jfoucher/ubuntu-skype-indicator&quot;&gt;ubuntu-skype-indicator github repository&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;UPDATE: Before you run this script, you need to install its dependencies, python-indicate and skype4py
On ubuntu, it's as simple as running &lt;code lang=&quot;bash&quot;&gt;sudo apt-get install python-skype python-indicate&lt;/code&gt;&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2011/01/14/python-skype-notifier-for-ubuntu.html&quot;&gt;<!--:en-->Python skype notifier for Ubuntu<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->Compile custom kernel on Ubuntu 10.10<!--:--></title>
		<link href="http://jfoucher.com/2011/01/12/compile-custom-kernel-on-ubuntu-10-10.html"/>
		<updated>2011-01-12T15:06:02+01:00</updated>
		<id>http://jfoucher.com/2011/01/12/compile-custom-kernel-on-ubuntu-10-10</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;First off, you want to grab the latest kernel source from &lt;a href=&quot;http://kernel.org/&quot;&gt;http://kernel.org/&lt;/a&gt; and save it to a folder on your computer. I used my browser's default : &lt;code inline=&quot;true&quot; lang=&quot;bash&quot;&gt;~/Downloads&lt;/code&gt;. Right click on the archive and select &quot;extract here&quot;&lt;/p&gt;

&lt;h3&gt;Configuration&lt;/h3&gt;


&lt;p&gt;Open a terminal, &quot;cd&quot; to your source directory, in my case &lt;code inline=&quot;true&quot; lang=&quot;bash&quot;&gt;cd ~/Downloads/linux-2.6.37&lt;/code&gt; and run &lt;code inline=&quot;true&quot; lang=&quot;bash&quot;&gt;make gconfig&lt;/code&gt; if using Ubuntu or &lt;code inline=&quot;true&quot; lang=&quot;bash&quot;&gt;make kconfig&lt;/code&gt; if running Kubuntu. At that point, you'll need to know a fair bit about your system's hardware, to select only the options that are applicable. I like to reuse my current config as a starting point, so if you are using the default ubuntu kernel, the configuration used is stored in the &lt;code inline=&quot;true&quot;&gt;/boot&lt;/code&gt; directory, with names like &lt;code inline=&quot;true&quot;&gt;config-2.6.35-24-generic&lt;/code&gt; Copy the latest one to your linux source directory. When the configuration editor is loaded, choose &lt;code inline=&quot;true&quot;&gt;File &gt;&gt; Load&lt;/code&gt; and select the file you just copied over. Now the Ubuntu default configuration is loaded. If you were to compile your kernel you would get the same kind of system you have now : functional but suboptimal.&lt;/p&gt;

&lt;p&gt;We'll try and better that a bit.&lt;/p&gt;

&lt;p&gt;The first submenu I open is Processor type and features. In there, I disable everything related to SMP and Paravirtualized guest support as I do not plan to run this as a VM guest. I choose the type of processor appropriate to my machine, in this case &quot;new Xeon&quot;&lt;/p&gt;

&lt;p&gt;You can use &lt;code inline=&quot;true&quot; lang=&quot;bash&quot;&gt;make localmodconfig&lt;/code&gt; which will disable all the modules not currently loaded from your config file. Be careful though, because if there are devices and/of file systems you're not using at the moment, the drivers won't be added.&lt;/p&gt;

&lt;h3&gt;Compiling and instalation&lt;/h3&gt;


&lt;p&gt;Once you're happy with the configuration, save and close the editor, and run &lt;code inline=&quot;true&quot; lang=&quot;bash&quot;&gt;make all&lt;/code&gt; or &lt;code inline=&quot;true&quot; lang=&quot;bash&quot;&gt;make -j4 all&lt;/code&gt; on multicore processors to run several processes in parallel, which will compile the kernel and the modules specified in the .config file&lt;/p&gt;

&lt;p&gt;That's the regular debian method, in which you have to run mkinitrd afterwards. I ended up doing it &lt;a href=&quot;https://help.ubuntu.com/community/Kernel/Compile&quot;&gt;the ubuntu way&lt;/a&gt;, where you create .deb packages you can later install with your preferred package manager.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p class=&quot;line862&quot;&gt;If you re-used the existing configuration, note that Ubuntu kernels build with debugging information on, which makes the resulting kernel modules (*.ko files) much larger than they would otherwise be. To turn this off, go into the config's &quot;Kernel hacking&quot;&amp;lt;!-- ; then, under &quot;Kernel debugging&quot;, --&amp;gt; and turn OFF &quot;Compile the kernel with debug info&quot;.&lt;/p&gt;
&lt;p class=&quot;line874&quot;&gt;Now you can compile the kernel and create the packages:&lt;/p&gt;
&lt;code lang=&quot;bash&quot;&gt;make-kpkg clean # only needed if you want to do a &quot;clean&quot; build
fakeroot make-kpkg --initrd --append-to-version=-some-string-here kernel-image kernel-headers&lt;/code&gt;&lt;/blockquote&gt;


&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;aligncenter&quot; src=&quot;http://media.tumblr.com/tumblr_let0e9SCP01qzbvjd.png&quot; alt=&quot;&quot; width=&quot;500&quot; height=&quot;338&quot; /&gt;&lt;/p&gt;


&lt;p&gt;Much easier...&lt;/p&gt;

&lt;h3&gt;Drivers&lt;/h3&gt;


&lt;p&gt;Of course, if you're using non-free drivers, you'll want to reinstall them. The first time I booted the new kernel, X did not start because it couldn't load the nvidia kernel module. Luckily, I had the latest driver around from a previous install, so installed straight away from the command line.&lt;/p&gt;

&lt;p&gt;You should now have a working Ubuntu install running your own custom kernel. Of course, you are responsible for upgradin kernel and binary drivers, as the updates from Ubuntu are not going to work any longer... Although I'm not so sure about that. I'll see in a while I guess.&lt;/p&gt;

&lt;h3&gt;Done!&lt;/h3&gt;


&lt;p&gt;Anyway, in my case this upgrade is really worth it because I get a functioning built-in microphone on my Vaio! Yay!&lt;/p&gt;

&lt;p&gt;So the moral is: don't be scared of trying a custom kernel, it really got much easier, and if you don't like it, going back is as easy as selecting another entry in grub...&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2011/01/12/compile-custom-kernel-on-ubuntu-10-10.html&quot;&gt;<!--:en-->Compile custom kernel on Ubuntu 10.10<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->New version of the auto-tag plugin released!<!--:--></title>
		<link href="http://jfoucher.com/2010/05/19/version-autotag-plugin-released.html"/>
		<updated>2010-05-19T16:45:10+02:00</updated>
		<id>http://jfoucher.com/2010/05/19/version-autotag-plugin-released</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;&lt;a href=&quot;http://wordpress.org/extend/plugins/auto-tag/&quot;&gt;Version 0.4 is here!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I know it's been a long time coming, but I just couldn't let you all down on that.&lt;/p&gt;

&lt;p&gt;Heavily refactored, lots of bug fixes, some nice improvements, I think you're going to like it.&lt;/p&gt;

&lt;p&gt;Let me know how it goes !&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2010/05/19/version-autotag-plugin-released.html&quot;&gt;<!--:en-->New version of the auto-tag plugin released!<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title>Coding challenge: One app a month</title>
		<link href="http://jfoucher.com/2010/01/02/coding-challenge-app-month.html"/>
		<updated>2010-01-02T12:34:11+01:00</updated>
		<id>http://jfoucher.com/2010/01/02/coding-challenge-app-month</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;This is the challenge I set myself for 2010 : Develop one webapp per month during the whole year.&lt;!--:--&gt;&lt;!--:fr--&gt;This is the challenge I set myself for 2010 : Develop one webapp per month during the whole year. Read more about it &lt;a href=&quot;http://jfoucher.fr/blog/one-app-a-month-challenge/&quot;&gt;on my portfolio&lt;/a&gt;&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2010/01/02/coding-challenge-app-month.html&quot;&gt;Coding challenge: One app a month&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->One app a month challenge<!--:--></title>
		<link href="http://jfoucher.com/2010/01/02/one-app-a-month-challenge.html"/>
		<updated>2010-01-02T00:29:39+01:00</updated>
		<id>http://jfoucher.com/2010/01/02/one-app-a-month-challenge</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;To keep learning and progressing in my line of work, you have to be &lt;strong&gt;learning new things&lt;/strong&gt; everyday. The evolution is so fast that if you don't go forward, you are effectively going backwards.&lt;/p&gt;

&lt;blockquote&gt;I need ideas of useful apps or libraries to include in this challenge.&lt;/blockquote&gt;


&lt;p&gt;So, my&lt;strong&gt; challenge for 2010&lt;/strong&gt; will be to build one web app &lt;strong&gt;every month&lt;/strong&gt;, and publish it here on the last day of each month. My schedule is pretty tight right now, so the apps will have to be rather quick to develop, but hopefuly it will help me learn new techniques and better coding practices. As they say, &quot;practice makes perfect&quot;...&lt;/p&gt;

&lt;p&gt;Whether I use a framework or not is entirely up to me, but I'd like to take this opportunity to try my hand at &lt;a href=&quot;http://www.kohanaphp.com/&quot;&gt;Kohana&lt;/a&gt;. I've been using &lt;a href=&quot;http://codeigniter.com&quot;&gt;CodeIgniter&lt;/a&gt; for nearly one year, and it seems like Kohana takes the CI spirit one step further.&lt;/p&gt;

&lt;p&gt;So, this is where I need your help : I need &lt;strong&gt;ideas of useful apps&lt;/strong&gt; or libraries to include in this challenge. The first one is going to be a &lt;strong&gt;url shortener&lt;/strong&gt;, developping the shortening and storing algorithms from scratch. I'm not sure whether I should do it as a standalone app, a standalone library, or a Kohana library...&lt;/p&gt;

&lt;p&gt;So, if you have any ideas about what I should develop, something you need, whatever, please comment below, thanks!&lt;/p&gt;

&lt;p&gt;EDIT: The result of the January Challenge is now live : &lt;a href=&quot;http://6px.eu/smallurl&quot;&gt;The URL shortener&lt;/a&gt;&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2010/01/02/one-app-a-month-challenge.html&quot;&gt;<!--:en-->One app a month challenge<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->BlueIce Plugin<!--:--></title>
		<link href="http://jfoucher.com/2009/12/14/blueice-plugin.html"/>
		<updated>2009-12-14T17:59:32+01:00</updated>
		<id>http://jfoucher.com/2009/12/14/blueice-plugin</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;I just created a very simple plugin for &lt;a title=&quot;The Anti-CMS&quot; href=&quot;http://blueiceapp.com&quot;&gt;BlueIce&lt;/a&gt;, the anti-CMS. It simply inserts a list containg links to all pages in the web site. The author published it on his &lt;a href=&quot;http://blueiceapp.com/docs/plugins&quot;&gt;3rd party plugins&lt;/a&gt; page, and I highly recommend his anti-CMS for small, semi static sites.&lt;/p&gt;

&lt;p&gt;It includes a clever cache system, so your web site will be almost as fast as if it was pure static html. All pages are rendered using &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;, making for simple content editing, using a &lt;a href=&quot;http://geany.org/&quot;&gt;text editor&lt;/a&gt; and an FTP client.&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2009/12/14/blueice-plugin.html&quot;&gt;<!--:en-->BlueIce Plugin<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->Why Google Wave is useless (with invites giveaway)<!--:--></title>
		<link href="http://jfoucher.com/2009/11/20/google-wave-useless.html"/>
		<updated>2009-11-20T10:00:29+01:00</updated>
		<id>http://jfoucher.com/2009/11/20/google-wave-useless</id>
		<content type="html">&lt;!--:en--&gt;


&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Google Wave&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/11/Screenshot-1.png&quot;&gt;&lt;img class=&quot;size-medium wp-image-172&quot; title=&quot;Google Wave&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/11/Screenshot-1-300x158.png&quot; alt=&quot;Google Wave&quot; width=&quot;300&quot; height=&quot;158&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;h3&gt;1. You need to have it open in your browser to appear online&lt;/h3&gt;


&lt;h3&gt;2. Nobody is ever online for that exact reason.&lt;/h3&gt;


&lt;h3&gt;3. All my contacts disappeared&lt;/h3&gt;


&lt;p&gt;For no apparent reason, none of my contacts are showing in wave right now... Kind of reduces the usability.&lt;/p&gt;

&lt;h3&gt;4. Too many ads in independently developped &quot;gadgets&quot;&lt;/h3&gt;


&lt;h3&gt;5. Counter intuitive interface.&lt;/h3&gt;


&lt;ul&gt;
    &lt;li&gt;&quot;pinging&quot; someone just opens a new wave with that contact : I could have done that myself... Do something more, like, I don't know, send an email&lt;/li&gt;
    &lt;li&gt;can't search trough a list to add contacts that are on wave&lt;/li&gt;
&lt;/ul&gt;




&lt;h3&gt;And now (oh the irony) to the Wave invite giveaway.&lt;/h3&gt;


&lt;p&gt;Very easy : leave a comment on this post with your real email address, and on Monday at 12 GMT I'll pick ten winners. (yes I have that many unused invites...)&lt;/p&gt;

&lt;p&gt;Have a good weekend&lt;/p&gt;

&lt;!--:--&gt;

&lt;a href=&quot;http://jfoucher.com/2009/11/20/google-wave-useless.html&quot;&gt;<!--:en-->Why Google Wave is useless (with invites giveaway)<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->EducaThyssen<!--:--></title>
		<link href="http://jfoucher.com/2009/10/06/190.html"/>
		<updated>2009-10-06T09:36:34+02:00</updated>
		<id>http://jfoucher.com/2009/10/06/190</id>
		<content type="html">&lt;!--:en--&gt;


&lt;div class=&quot;image-with-caption alignnone&quot; style=&quot;width:370px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Una web del Museo Thyssen-Bornemisza&lt;/div&gt;&lt;a href=&quot;http://www.educathyssen.org&quot;&gt;&lt;img src=&quot;http://jfoucher.fr/wp-content/uploads/2009/10/Pantallazo-2-370x232.jpg&quot; alt=&quot;Una web del Museo Thyssen-Bornemisza&quot; title=&quot;Educathyssen.org&quot; width=&quot;370&quot; height=&quot;232&quot; class=&quot;size-medium wp-image-189&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;Algunas mejoras en la web de &lt;a href=&quot;http://www.educathyssen.org&quot;&gt;Educathyssen.org&lt;/a&gt;, como por ejemplo le gestion de las encuestas, de los favoritos personales para cada usuario, el funccionamiento de los blogs, mejoras de seguridad en los formularios, etc...&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2009/10/06/190.html&quot;&gt;<!--:en-->EducaThyssen<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->Cafepress SIGG bottles discount and coupon code !<!--:--></title>
		<link href="http://jfoucher.com/2009/07/27/cafepress-sigg-bottles-discount-coupon-code.html"/>
		<updated>2009-07-27T21:13:36+02:00</updated>
		<id>http://jfoucher.com/2009/07/27/cafepress-sigg-bottles-discount-coupon-code</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;You've probably seen that cafepress let's you&lt;a href=&quot;http://www.cafepress.com/designer/sigg/&quot;&gt; customize your sigg bottle&lt;/a&gt;, and you also no doubt know that water bottles are bad for the &lt;a href=&quot;http://ecoquotidien.fr&quot;&gt;environment&lt;/a&gt;, as only a small proportion are recycled, and many end up scattered around natural areas, not least of which, due to their rather &lt;em&gt;floating&lt;/em&gt; nature, our beaches. Sigg bottles are a durable, light and trendy alternative, and today we are going to &lt;em&gt;design our own&lt;/em&gt;, but not using &lt;a href=&quot;http://cafepress.com&quot;&gt;cafepress'&lt;/a&gt; flash designer!&lt;/p&gt;

&lt;blockquote&gt;There is a better and cheaper way to get your custom sigg bottle.&lt;/blockquote&gt;


&lt;p&gt;No, because there is a &lt;em&gt;better and cheaper&lt;/em&gt; way to get your custom sigg bottle. Don't want to pay $28 for a bottle ? Don't worry, this solution will get you a three dollars discount per bottle, which added to our 5 dollars &lt;em&gt;cafepress coupon&lt;/em&gt; below, will get you a brand new, custom SIGG bottle for around 23 dollars! Of course, you'll have to buy three, because the coupon is only valid for purchases above $50, but these bottles are such great, eco-friendly gifts, that three of them is not nearly enough!&lt;/p&gt;

&lt;p&gt;Anyway, to get a cheaper custom sigg bottle, we need to &lt;em&gt;open a cafepress account&lt;/em&gt;, and set up a shop. Don't worry, it's completely free. First, click on &quot;sign in&quot; at the top of the home page in cafepress, then click continue once you reach the screen below.&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Register at Cafepress&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress1.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-151&quot; title=&quot;Sign In&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress1-300x159.jpg&quot; alt=&quot;Register at Cafepress&quot; width=&quot;300&quot; height=&quot;159&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;You arrive at the page shown below where you enter your registration information. Fill all the  fields in and then click on &quot;Join now&quot;.&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Enter your information&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress2.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-152&quot; title=&quot;Register&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress2-300x168.jpg&quot; alt=&quot;Enter your information&quot; width=&quot;300&quot; height=&quot;168&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;Fill in more info and then click &quot;Open your shop!&quot;&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Fill in More Info&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress3.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-153&quot; title=&quot;More Info&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress3-300x124.jpg&quot; alt=&quot;Fill in More Info&quot; width=&quot;300&quot; height=&quot;124&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;You are now given a choice to open a basic or a premium shop.  For our purposes, a free basic shop is sufficient, so click on &quot;Open a basic shop&quot;&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Choose shop type&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress4.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-155&quot; title=&quot;Shop type&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress4-300x217.jpg&quot; alt=&quot;Choose shop type&quot; width=&quot;300&quot; height=&quot;217&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;Fill in some more details on the next page and click on &quot;Submit&quot;, then click on &quot;Build your shop once you reach the page below&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Build your shop&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress5.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-156&quot; title=&quot;Build your shop&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress5-300x179.jpg&quot; alt=&quot;Build your shop&quot; width=&quot;300&quot; height=&quot;179&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;I leave it as an exercise to the reader to insert a product, preferably a Sigg botlle into the shop. Once you reach the screen below, you can keep going.&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Sigg bottle added to shop&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress6.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-157&quot; title=&quot;Sigg bottle added to shop&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress6-300x211.jpg&quot; alt=&quot;Sigg bottle added to shop&quot; width=&quot;300&quot; height=&quot;211&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;blockquote&gt;Draw your image using Gimp or Inkscape, or whatever software you are used to.&lt;/blockquote&gt;


&lt;p&gt;Great, you've added a Sigg bottle to your shop. The only slight problem is that it's completely white. We really need to do something about that! So, &lt;em&gt;is your image ready&lt;/em&gt;? No? Well let's go then. Cafepress provides a &lt;a href=&quot;http://www.cafepress.com/content/help/img/templates/280_H_F.jpg&quot;&gt;template&lt;/a&gt; for the image on the Sigg bottles, and I suggest you follow it to get an image of the proper size. The only thing is that it's at 200 dpi, which seems a bit low for printing, so I suggest you scale it up to at least 300 DPI, or a pixel size of 975x1800. Here is &lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/280_H_R.png&quot;&gt;my template at 600 DPI&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Draw your image using &lt;a href=&quot;http://gimp.org&quot;&gt;Gimp&lt;/a&gt; or &lt;a href=&quot;http://inkscape.org&quot;&gt;Inkscape&lt;/a&gt;, or whatever software you are used to, or just choose a photograph from your collection. The thing to keep in mind is that the shape of the template is the maximum size of your image, but it can be smaller...&lt;/p&gt;

&lt;p&gt;Ok, so now you have your image the way you like it, I suggest you &lt;em&gt;give it a try&lt;/em&gt; on the &lt;a href=&quot;http://www.cafepress.com/designer/sigg/&quot;&gt;flash designer&lt;/a&gt;. When you are entirely satisfied, click on &quot;edit&quot; below the image of the bottle to get to the page shown on the screenshot below.&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Add image&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress7.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-161&quot; title=&quot;Add image&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress7-300x207.jpg&quot; alt=&quot;Add image&quot; width=&quot;300&quot; height=&quot;207&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;On the right hand side, click on the &quot;select image&quot; button, then on &quot;Upload image&quot;, which brings you to a page where you can upload a number of images, choose and &lt;em&gt;upload your image&lt;/em&gt;. It takes a few steps, which I'm not going to detail here.&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Image applied to bottle&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress8.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-165&quot; title=&quot;Image applied to bottle&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress8-300x205.jpg&quot; alt=&quot;Image applied to bottle&quot; width=&quot;300&quot; height=&quot;205&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;Once you selected the image to apply to your bottle, you can tweak it's size, but if you used the template, it should fill all the space available, see screenshot above.&lt;/p&gt;

&lt;p&gt;Click next, and you can write a title, a description and choose a price for your item. Don't worry, you'll be able to buy it at the base price later, so &lt;em&gt;set any markup you like&lt;/em&gt;. I didn't touch anything, as it doesn't matter for our purposes. But feel free to change things if you want to sell your custom bottle later.&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Change item details&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress9.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-166&quot; title=&quot;Change item details&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress9-300x195.jpg&quot; alt=&quot;Change item details&quot; width=&quot;300&quot; height=&quot;195&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;Once you click &quot;save and finish&quot;, &lt;em&gt;your custom Sigg bottle is created!&lt;/em&gt; You can now buy it at the base price by following these instructions : first, click on the &quot;your shops&quot; link at the top left of the page shown above, then on &quot;buy&quot; on the same line as your shop's name, and then &quot;Click to buy from your own shop&quot;, after which you get to the product page for your custom bottle, which you can then buy following normal procedures.&lt;/p&gt;

&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Buy your custom Sigg bottle&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress11.jpg&quot;&gt;&lt;img class=&quot;size-medium wp-image-167&quot; title=&quot;Buy your custom Sigg bottle&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/07/cafepress11-300x129.jpg&quot; alt=&quot;Buy your custom Sigg bottle&quot; width=&quot;300&quot; height=&quot;129&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;When you get to the checkout form, fill in the following Cafepress coupon code: POPPYSNEEZE to get a further $5 discount, on purchases over $50.&lt;/p&gt;

&lt;blockquote&gt;
Cafepress coupon code: a further $5 discount&lt;/blockquote&gt;


&lt;p&gt;And that's it, your three brand new, custom, home made sigg bottles for &lt;strong&gt;$76.22&lt;/strong&gt; including shipping.&lt;/p&gt;

&lt;p&gt;A further tip if you want a different design on each bottle : as the free version of cafepress doesn't allow you to sell more than one product of each type in each shop, open several free shops with a different Sigg bottle in each!&lt;/p&gt;

&lt;p&gt;I hope you enjoy this post. If you decide to follow this tutorial, send a pic of your bottle in the comments.&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2009/07/27/cafepress-sigg-bottles-discount-coupon-code.html&quot;&gt;<!--:en-->Cafepress SIGG bottles discount and coupon code !<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->Access to MySQL import class<!--:--></title>
		<link href="http://jfoucher.com/2009/07/18/access-to-mysql-import-class.html"/>
		<updated>2009-07-18T09:57:25+02:00</updated>
		<id>http://jfoucher.com/2009/07/18/access-to-mysql-import-class</id>
		<content type="html">&lt;!--:en--&gt;


&lt;p&gt;In my latest project &lt;a href=&quot;http://tecknosfera.com&quot;&gt;at work&lt;/a&gt; I need to import data from an acess database into mySQL to be able to create an online shop from that data. Instead of importing just the database of that particular client, I created a generic PHP class that can import any Access database to MySQL.&lt;/p&gt;

&lt;blockquote&gt;
Big databases must be imported by chunks.&lt;/blockquote&gt;


&lt;p&gt;Since Access databases can get so big, the import class has to do its job by chunks, to avoid memory limits. It also needs to reload itself when it detects it is close to the time limit, all of which it now does without any problems.
We can now import (hopefully) any Access database.&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2009/07/18/access-to-mysql-import-class.html&quot;&gt;<!--:en-->Access to MySQL import class<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->Ecoquotidien.fr<!--:--></title>
		<link href="http://jfoucher.com/2009/07/10/ecoquotidien.html"/>
		<updated>2009-07-10T10:18:11+02:00</updated>
		<id>http://jfoucher.com/2009/07/10/ecoquotidien</id>
		<content type="html">&lt;!--:en--&gt;


&lt;div class=&quot;image-with-caption alignleft&quot; style=&quot;width:370px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;Ecoquotidien&lt;/div&gt;&lt;a href=&quot;http://ecoquotidien.fr&quot;&gt;&lt;img src=&quot;http://jfoucher.fr/wp-content/uploads/2009/07/ecoquotidien-370x231.jpg&quot; alt=&quot;Ecoquotidien&quot; title=&quot;Ecoquotidien&quot; width=&quot;370&quot; height=&quot;231&quot; class=&quot;size-medium wp-image-157&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;[lang_es]La ecologia al cotidiano. Que hacer para cuidar de nuestro planeta en nuestros hogares y jardines.&lt;/p&gt;

&lt;p&gt;Basado en &lt;a href=&quot;http://wordpress.org&quot;&gt;Wordpress&lt;/a&gt;, este blog hace uso extensivo de &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt; para dar vida a la p&amp;aacute;gina, con animaciones, contenido dyn&amp;aacute;mico, etc... Las nubes, por ejemplo, se mueven de manera aleatoria sobre la pantalla.
[/lang_es][lang_en]Daily ecology. What we can do to take care of our planet from our homes and gardens.&lt;/p&gt;

&lt;p&gt;Based in &lt;a href=&quot;http://wordpress.org&quot;&gt;Wordpress&lt;/a&gt;, this blog makes extensive use of &lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt; to give life to the page, with animations, dynamic content, etc... The clouds, for example move around on the screen as if an imaginary electronic wind was blowing!
[/lang_en]&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2009/07/10/ecoquotidien.html&quot;&gt;<!--:en-->Ecoquotidien.fr<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->WP-Feedly theme available for download<!--:--></title>
		<link href="http://jfoucher.com/2009/06/27/wpfeedly-theme-download.html"/>
		<updated>2009-06-27T11:19:32+02:00</updated>
		<id>http://jfoucher.com/2009/06/27/wpfeedly-theme-download</id>
		<content type="html">&lt;!--:en--&gt;


&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;WP-Feedly Screenshot&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/06/screenshot1.png&quot;&gt;&lt;img class=&quot;size-full wp-image-138&quot; title=&quot;WP-Feedly Screenshot&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/06/screenshot1.png&quot; alt=&quot;WP-Feedly Screenshot&quot; width=&quot;300&quot; height=&quot;255&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;After some beta testing and subsequent bug squashing, WP-Feedly is ready for prime-time, and &lt;a href=&quot;/wp-feedly.zip&quot;&gt;available for download&lt;/a&gt;.&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2009/06/27/wpfeedly-theme-download.html&quot;&gt;<!--:en-->WP-Feedly theme available for download<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
	<entry>
		<title><!--:en-->New portfolio theme: CleanFolio<!--:--></title>
		<link href="http://jfoucher.com/2009/06/27/portfolio-theme.html"/>
		<updated>2009-06-27T00:17:07+02:00</updated>
		<id>http://jfoucher.com/2009/06/27/portfolio-theme</id>
		<content type="html">&lt;!--:en--&gt;


&lt;div class=&quot;image-with-caption aligncenter&quot; style=&quot;width:300px&quot;&gt;&lt;div class=&quot;caption&quot;&gt;CleanFolio&lt;/div&gt;&lt;a href=&quot;http://cdn.jfoucher.com/uploads/2009/06/screenshot.png&quot;&gt;&lt;img class=&quot;size-medium wp-image-130&quot; title=&quot;CleanFolio&quot; src=&quot;http://cdn.jfoucher.com/uploads/2009/06/screenshot-300x187.png&quot; alt=&quot;CleanFolio&quot; width=&quot;300&quot; height=&quot;187&quot; /&gt;&lt;/a&gt;&lt;/div&gt;


&lt;p&gt;I've been working on my profesionnal portfolio these days, and I'm thinking about releasing the theme. It's a very clean and white design, with a jQuery carousel to present my past work. You can see a demo on &lt;a href=&quot;http://jfoucher.fr&quot;&gt;Jonathan Foucher's portfolio&lt;/a&gt;. So, should I release it? Do you like it?&lt;!--:--&gt;&lt;/p&gt;
&lt;a href=&quot;http://jfoucher.com/2009/06/27/portfolio-theme.html&quot;&gt;<!--:en-->New portfolio theme: CleanFolio<!--:-->&lt;/a&gt; is a post by Jonathan Foucher at &lt;a
href=&quot;http://jfoucher.com&quot;&gt;Geeky Nuggets&lt;/a&gt;</content>
	</entry>
	
</feed>